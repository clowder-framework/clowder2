apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "clowder2.fullname" . }}-backend
  labels:
    {{- include "clowder2.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "clowder2.fullname" . }}-backend
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/name: {{ include "clowder2.fullname" . }}-backend
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "clowder2.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: backend
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          env:
            - name: WEB_CONCURRENCY
              value: "1"
            - name: MINIO_SERVER_URL
              value: {{ .Values.backend.env.MINIO_SERVER_URL }}
            - name: MINIO_EXTERNAL_SERVER_URL
              value: minio-api.{{ .Values.hostname }}
            - name: MINIO_SECURE
              value: {{ .Values.backend.env.MINIO_SECURE | quote }}
            - name: MINIO_BUCKET_NAME
              value: {{ .Values.backend.env.MINIO_BUCKET_NAME }}
            - name: MINIO_ACCESS_KEY
              value: {{ .Values.minio.auth.rootUser }}
            - name: MINIO_SECRET_KEY
              {{- if .Values.backend.existingSecret }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.backend.existingSecret }}
                  key: {{ .Values.backend.existingMinioSecretKey | default "root-password" }}
              {{- else }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "clowder2.fullname" . }}-minio
                  key: root-password
              {{- end }}
            - name: MINIO_UPLOAD_CHUNK_SIZE
              value: {{ .Values.backend.env.MINIO_UPLOAD_CHUNK_SIZE | quote}}
            - name: MONGODB_URL
              value: {{ .Values.backend.env.MONGODB_URL }}
            - name: MONGO_DATABASE
              value: {{ .Values.mongodb.database }}
            - name: CLOWDER2_URL
              value: http://{{ .Values.hostname }}
            - name: auth_base
              value: $(CLOWDER2_URL)
            - name: auth_realm
              value: {{ .Values.auth.realm }}
            - name: auth_client_id
              value: {{ .Values.auth.clientID }}
            - name: auth_redirect_uri
              value: $(CLOWDER2_URL)/api/v2/auth
            - name: auth_url
              value: $(CLOWDER2_URL)/keycloak/realms/clowder/protocol/openid-connect/auth?client_id=clowder2-backend&response_type=code
            - name: oauth2_scheme_auth_url
              value: {{ .Values.backend.env.oauth2_scheme_auth_url }}
            - name: auth_register_url
              value: $(CLOWDER2_URL){{ .Values.backend.env.auth_register_url }}
            - name: auth_token_url
              value: {{ .Values.backend.env.auth_token_url }}
            - name: auth_server_url
              value: $(CLOWDER2_URL)/keycloak/
            - name: keycloak_base
              value: $(CLOWDER2_URL)/api
            - name: frontend_url
              value: $(CLOWDER2_URL)
            - name: elasticsearch_url
              value: {{ .Values.backend.env.elasticsearch_url }}
            - name: elasticsearch_no_of_shards
              value: "5"
            - name: elasticsearch_no_of_replicas
              value: "5"
            - name: RABBITMQ_USER
              value: {{ .Values.rabbitmq.auth.username }}
            - name: RABBITMQ_PASS
              {{- if .Values.backend.existingSecret }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.backend.existingSecret }}
                  key: {{ .Values.backend.existingRabbitMQSecretKey | default "rabbitmq-password" }}
              {{- else }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "clowder2.fullname" . }}-rabbitmq
                  key: rabbitmq-password
              {{- end }}
            - name: RABBITMQ_HOST
              value: {{ .Values.backend.env.RABBITMQ_HOST }}
            - name: HEARTBEAT_EXCHANGE
              value: "extractors"
            - name: API_HOST
              value: {{ .Values.backend.env.API_HOST }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
