{
  "compilerOptions": {
	// Specify ECMAScript target version
	"target": "es5",

	// Specify where to search for @types
	"typeRoots": [
	  "node_modules/@types"
	],
	// List of library files to be included in the compilation
	"lib": [
	  "dom",
	  "dom.iterable",
	  "esnext"
	],
	// Allow JavaScript files to be compiled
	"allowJs": true,
	// Skip type checking of all declaration files
	"skipLibCheck": true,
	// Disables namespace imports (import * as fs from "fs") and enables CJS/AMD/UMD style imports (import fs from "fs")
	"esModuleInterop": true,
	// Allow default imports from modules with no default export
	"allowSyntheticDefaultImports": true,
	// Enable all strict type checking options
	"strict": true,
	// Disallow inconsistently-cased references to the same file
	"forceConsistentCasingInFileNames": true,
	// Specify module code generation
	"module": "esnext",
	// Resolve modules using Node.js style
	"moduleResolution": "node",
	// Unconditionally emit imports for unresolved files
	"isolatedModules": true,
	// Include modules imported with .json extension
	"resolveJsonModule": true,
	// Do not emit output (meaning do not compile code, only perform type checking)
	"noEmit": true,
	// Support JSX in .tsx files
	"jsx": "react-jsx",
	// Generate corresponding .map file
	"sourceMap": true,
	// Generate corresponding .d.ts file
	"declaration": true,
	// Report errors on unused locals
	"noUnusedLocals": true,
	// Report errors on unused parameters
	"noUnusedParameters": true,
	// Enable incremental compilation by reading/writing information from prior compilations to a file on disk
	"incremental": true,
	// Report errors for fallthrough cases in switch statement
	"noFallthroughCasesInSwitch": true
  },
  // The files TypeScript should type check
  "include": [
	"src"
  ],
  // The files to not type check
  "exclude": [
	"node_modules",
	"dist",
	"build"
  ]
}
